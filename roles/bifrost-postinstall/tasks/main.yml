---
# This role installs OpenStack Bifrost (standalone version of Ironic) and create the required files to proceed with the deployment of Proxmox

- name: Download Ubuntu (20.04.6) Ironic Python Agent (IPA) image using ironic-python-agent-builder
  shell:
    cmd: |
      . /opt/stack/bifrost/bin/activate
      /opt/stack/bifrost/bin/ironic-python-agent-builder -r focal -o ipa ubuntu
  args:
    creates: /tmp/ipa.d
    chdir: /tmp/

- name: Move default IPA image in a separate directory
  shell:
    cmd: |
      rm -rf /var/lib/ironic/httpboot/ipa*

- name: Copy new IPA image to Bifrost directory
  shell:
    cmd: |
      cp -r /tmp/ipa* /var/lib/ironic/httpboot/

- name: Create SHA256 checksum of IPA initramfs
  shell:
    cmd: |
      sha256sum ipa.initramfs > ipa.initramfs.sha256
  args:
    chdir: /var/lib/ironic/httpboot/

- name: Create SHA256 checksum of IPA kernel
  shell:
    cmd: |
      sha256sum ipa.kernel > ipa.kernel.sha256
  args:
    chdir: /var/lib/ironic/httpboot/

- name: Download Debian 12 Bookworm Cloud image
  get_url:
    url: https://cdimage.debian.org/images/cloud/bookworm/latest/debian-12-generic-amd64.qcow2
    dest: /var/lib/ironic/httpboot/debian-12-generic-amd64.qcow2

- name: Change owner and permissions of IPA files
  shell:
    cmd: |
      chown -R ironic: /var/lib/ironic/httpboot/*
      chmod -R 755 /var/lib/ironic/httpboot/*

- name: Rename cloud image for modified version
  shell:
    cmd: |
      mv /var/lib/ironic/httpboot/debian-12-generic-amd64.qcow2 /var/lib/ironic/httpboot/debian-12-generic-amd64_mod.qcow2

- name: Install virt-customize
  apt:
    name: libguestfs-tools
    state: present
    update_cache: yes

- name: Customize the Debian Cloud image using virt-customize to install firmware for network card
  command: |
    virt-customize -v -a debian-12-generic-amd64_mod.qcow2 --run-command "sudo apt update && sudo apt upgrade -y && sudo apt install software-properties-common -y && sudo apt-add-repository non-free && sudo apt-get update && sudo apt install firmware-bnx2 -y"
  args:
    chdir: /var/lib/ironic/httpboot/

- name: Get SSH public key
  shell:
    cmd: |
      cat {{ lookup('ansible.builtin.env', 'SH_PROX_SSHKEYPUB_PATH') }}
  register: my_sshkey

- name: Get MD5 checksum of Debian Cloud image
  shell:
    cmd: |
      md5sum debian-12-generic-amd64_mod.qcow2 | cut -d' ' -f1
  register: my_image_md5
  args:
    chdir: /var/lib/ironic/httpboot/

- name: Put SSH public key in variables.sh
  lineinfile:
    path: "{{ lookup('ansible.builtin.env', 'SH_PROX_PROXMOXINSTALL_PATH') }}/variables.sh"
    regexp: '^export SH_PROX_SSHKEY_CONTENT='
    line: export SH_PROX_SSHKEY_CONTENT="{{ my_sshkey.stdout }}"

- name: Put MD5 in variables.sh
  lineinfile:
    path: "{{ lookup('ansible.builtin.env', 'SH_PROX_PROXMOXINSTALL_PATH') }}/variables.sh"
    regexp: '^export SH_PROX_MD5_IMAGE='
    line: export SH_PROX_MD5_IMAGE={{ my_image_md5.stdout }}

- name: Restart ironic service
  systemd:
    name: ironic.service
    state: restarted

- name: Restart ironic-inspector service
  systemd:
    name: ironic-inspector.service
    state: restarted
